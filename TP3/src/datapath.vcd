$date
	Mon Nov 23 19:25:06 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 32 ! PC [31:0] $end
$var wire 32 " Instruction [31:0] $end
$var wire 32 # ALUResult [31:0] $end
$var reg 1 $ Clock $end
$var reg 1 % Reset $end
$scope module Call $end
$var wire 1 & RegWrite $end
$var wire 1 % Reset $end
$var wire 1 $ clock $end
$var wire 1 ' Zero $end
$var wire 32 ( WriteData [31:0] $end
$var wire 32 ) ValSignExtend [31:0] $end
$var wire 32 * Soma [31:0] $end
$var wire 32 + ShiftValue [31:0] $end
$var wire 1 , RegDst $end
$var wire 32 - ReadData [31:0] $end
$var wire 32 . Prx_PC [31:0] $end
$var wire 32 / PC [31:0] $end
$var wire 1 0 MemtoReg $end
$var wire 1 1 MemWrite $end
$var wire 1 2 MemRead $end
$var wire 32 3 Instruction [31:0] $end
$var wire 32 4 DataAux [31:0] $end
$var wire 32 5 Data2 [31:0] $end
$var wire 32 6 Data1 [31:0] $end
$var wire 1 7 Branch $end
$var wire 1 8 ANDBranch $end
$var wire 1 9 ALUSrc $end
$var wire 32 : ALUResult [31:0] $end
$var wire 2 ; ALUOp [1:0] $end
$var wire 4 < ALUCtrl [3:0] $end
$scope module CatchBranch $end
$var wire 32 = ValSignExtend [31:0] $end
$var reg 32 > Result [31:0] $end
$upscope $end
$scope module CatchBranch1 $end
$var wire 1 ' B $end
$var wire 1 7 A $end
$var reg 1 8 Exit $end
$upscope $end
$scope module CatchDat $end
$var wire 1 $ clock $end
$var wire 1 % reset $end
$var wire 32 ? write_data [31:0] $end
$var wire 1 1 mem_write $end
$var wire 1 2 mem_read $end
$var wire 32 @ address [31:0] $end
$var reg 32 A result [31:0] $end
$upscope $end
$scope module CatchImdEnd $end
$var wire 32 B extensor [31:0] $end
$var wire 7 C opcode [6:0] $end
$var wire 32 D in [31:0] $end
$var wire 3 E funct3 [2:0] $end
$var reg 32 F IMM_OUT [31:0] $end
$upscope $end
$scope module CatchIns $end
$var wire 32 G instrucaoOut [31:0] $end
$var wire 32 H endereco [31:0] $end
$upscope $end
$scope module CatchOp $end
$var wire 3 I funct3 [2:0] $end
$var wire 7 J funct7 [6:0] $end
$var wire 2 K alu_operation [1:0] $end
$var reg 4 L alu_ctr [3:0] $end
$upscope $end
$scope module CatchPC $end
$var wire 1 $ clock $end
$var wire 1 % reset $end
$var wire 32 M data_in [31:0] $end
$var reg 32 N data_out [31:0] $end
$upscope $end
$scope module CatchPC2 $end
$var wire 1 8 ANDBranch $end
$var wire 32 O B [31:0] $end
$var wire 1 $ clock $end
$var wire 32 P A [31:0] $end
$var reg 32 Q Sum [31:0] $end
$upscope $end
$scope module CatchResult $end
$var wire 4 R alu_control [3:0] $end
$var wire 1 ' zero $end
$var wire 32 S b [31:0] $end
$var wire 32 T a [31:0] $end
$var reg 32 U alu_out [31:0] $end
$scope function OUT $end
$var reg 32 V OUT [31:0] $end
$var reg 32 W a [31:0] $end
$var reg 32 X b [31:0] $end
$upscope $end
$upscope $end
$scope module CatchVal $end
$var wire 7 Y opcode [6:0] $end
$var reg 1 7 Branch $end
$var reg 1 2 MemRead $end
$var reg 1 1 MemWrite $end
$var reg 1 0 MemtoReg $end
$var reg 1 , RegDst $end
$var reg 2 Z aluop [1:0] $end
$var reg 1 9 alusrc $end
$var reg 1 [ regwrite $end
$upscope $end
$scope module PC4 $end
$var wire 1 $ clock $end
$var wire 32 \ pcIn [31:0] $end
$var wire 1 % reset $end
$var reg 32 ] pcOut [31:0] $end
$upscope $end
$scope module Reg $end
$var wire 1 $ clock $end
$var wire 5 ^ rd [4:0] $end
$var wire 1 % reset $end
$var wire 5 _ rs1 [4:0] $end
$var wire 5 ` rs2 [4:0] $end
$var wire 1 & writereg $end
$var wire 32 a writedata [31:0] $end
$var reg 32 b readdata1 [31:0] $end
$var reg 32 c readdata2 [31:0] $end
$var integer 32 d i [31:0] $end
$upscope $end
$scope module u1 $end
$var wire 5 e data0 [4:0] $end
$var wire 5 f data1 [4:0] $end
$var wire 1 , select $end
$var reg 1 g out $end
$upscope $end
$scope module u2 $end
$var wire 32 h data0 [31:0] $end
$var wire 32 i data1 [31:0] $end
$var wire 1 9 select $end
$var reg 32 j out [31:0] $end
$upscope $end
$scope module u4 $end
$var wire 32 k data0 [31:0] $end
$var wire 32 l data1 [31:0] $end
$var wire 1 0 select $end
$var reg 32 m out [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx m
bx l
bx k
bx j
bx i
bx h
xg
bx f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
x[
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
x9
x8
x7
bx 6
bx 5
bx 4
bx 3
x2
x1
x0
bx /
bx .
bx -
x,
bx +
bx *
bx )
bx (
x'
x&
x%
x$
bx #
bx "
bx !
$end
#1
0$
#2
08
0g
b10 <
b10 L
b10 R
1,
b10 ;
b10 K
b10 Z
1[
09
01
00
02
07
b0 E
b110011 C
b1 ^
b10 `
b1 _
b10 f
b1 e
b0 I
b0 J
b110011 Y
b1000001000000010110011 "
b1000001000000010110011 3
b1000001000000010110011 D
b1000001000000010110011 G
b0 /
b0 H
b0 M
b0 P
b0 ]
b0 !
b0 .
b0 N
b0 \
b100000 d
1%
1$
#3
0$
#4
b0 (
b0 ?
b0 a
b0 m
1'
b0 #
b0 :
b0 @
b0 U
b0 k
b0 V
b0 X
b0 4
b0 S
b0 j
b100 /
b100 H
b100 M
b100 P
b100 ]
b0 *
b0 Q
b0 W
b0 5
b0 c
b0 h
b0 6
b0 T
b0 b
b0 l
0%
1$
#5
0$
#6
b110 <
b110 L
b110 R
b100000 J
b1000000001000001000000010110011 "
b1000000001000001000000010110011 3
b1000000001000001000000010110011 D
b1000000001000001000000010110011 G
b1000 /
b1000 H
b1000 M
b1000 P
b1000 ]
b100 !
b100 .
b100 N
b100 \
b100 *
b100 Q
1$
#7
0$
#8
b1100 /
b1100 H
b1100 M
b1100 P
b1100 ]
b1000 *
b1000 Q
b1000 !
b1000 .
b1000 N
b1000 \
1$
#9
0$
#10
xg
bx E
bx C
bx ^
bx `
bx _
bx f
bx e
bx I
bx J
bx Y
bx "
bx 3
bx D
bx G
b10000 /
b10000 H
b10000 M
b10000 P
b10000 ]
b1100 !
b1100 .
b1100 N
b1100 \
b1100 *
b1100 Q
1$
#11
0$
#12
bx (
bx ?
bx a
bx m
b10100 /
b10100 H
b10100 M
b10100 P
b10100 ]
bx 4
bx S
bx j
x'
bx #
bx :
bx @
bx U
bx k
b10000 *
b10000 Q
b10000 !
b10000 .
b10000 N
b10000 \
bx 5
bx c
bx h
bx 6
bx T
bx b
bx l
1$
#13
0$
#14
b11000 /
b11000 H
b11000 M
b11000 P
b11000 ]
b10100 !
b10100 .
b10100 N
b10100 \
b10100 *
b10100 Q
1$
#15
0$
#16
b11100 /
b11100 H
b11100 M
b11100 P
b11100 ]
b11000 *
b11000 Q
b11000 !
b11000 .
b11000 N
b11000 \
1$
#17
0$
#18
b100000 /
b100000 H
b100000 M
b100000 P
b100000 ]
b11100 !
b11100 .
b11100 N
b11100 \
b11100 *
b11100 Q
1$
#19
0$
#20
b100100 /
b100100 H
b100100 M
b100100 P
b100100 ]
b100000 *
b100000 Q
b100000 !
b100000 .
b100000 N
b100000 \
1$
#21
0$
#22
b101000 /
b101000 H
b101000 M
b101000 P
b101000 ]
b100100 !
b100100 .
b100100 N
b100100 \
b100100 *
b100100 Q
1$
#23
0$
#24
b101100 /
b101100 H
b101100 M
b101100 P
b101100 ]
b101000 *
b101000 Q
b101000 !
b101000 .
b101000 N
b101000 \
1$
#25
0$
#26
b110000 /
b110000 H
b110000 M
b110000 P
b110000 ]
b101100 !
b101100 .
b101100 N
b101100 \
b101100 *
b101100 Q
1$
#27
0$
#28
b110100 /
b110100 H
b110100 M
b110100 P
b110100 ]
b110000 *
b110000 Q
b110000 !
b110000 .
b110000 N
b110000 \
1$
#29
0$
#30
b111000 /
b111000 H
b111000 M
b111000 P
b111000 ]
b110100 !
b110100 .
b110100 N
b110100 \
b110100 *
b110100 Q
1$
#31
0$
#32
b111100 /
b111100 H
b111100 M
b111100 P
b111100 ]
b111000 *
b111000 Q
b111000 !
b111000 .
b111000 N
b111000 \
1$
#33
0$
#34
b1000000 /
b1000000 H
b1000000 M
b1000000 P
b1000000 ]
b111100 !
b111100 .
b111100 N
b111100 \
b111100 *
b111100 Q
1$
#35
0$
#36
b1000100 /
b1000100 H
b1000100 M
b1000100 P
b1000100 ]
b1000000 *
b1000000 Q
b1000000 !
b1000000 .
b1000000 N
b1000000 \
1$
#37
0$
#38
b1001000 /
b1001000 H
b1001000 M
b1001000 P
b1001000 ]
b1000100 !
b1000100 .
b1000100 N
b1000100 \
b1000100 *
b1000100 Q
1$
#39
0$
#40
b1001100 /
b1001100 H
b1001100 M
b1001100 P
b1001100 ]
b1001000 *
b1001000 Q
b1001000 !
b1001000 .
b1001000 N
b1001000 \
1$
#41
0$
#42
b1010000 /
b1010000 H
b1010000 M
b1010000 P
b1010000 ]
b1001100 !
b1001100 .
b1001100 N
b1001100 \
b1001100 *
b1001100 Q
1$
#43
0$
#44
b1010100 /
b1010100 H
b1010100 M
b1010100 P
b1010100 ]
b1010000 *
b1010000 Q
b1010000 !
b1010000 .
b1010000 N
b1010000 \
1$
#45
0$
#46
b1011000 /
b1011000 H
b1011000 M
b1011000 P
b1011000 ]
b1010100 !
b1010100 .
b1010100 N
b1010100 \
b1010100 *
b1010100 Q
1$
#47
0$
#48
b1011100 /
b1011100 H
b1011100 M
b1011100 P
b1011100 ]
b1011000 *
b1011000 Q
b1011000 !
b1011000 .
b1011000 N
b1011000 \
1$
#49
0$
#50
b1100000 /
b1100000 H
b1100000 M
b1100000 P
b1100000 ]
b1011100 !
b1011100 .
b1011100 N
b1011100 \
b1011100 *
b1011100 Q
1$
#51
0$
#52
b1100100 /
b1100100 H
b1100100 M
b1100100 P
b1100100 ]
b1100000 *
b1100000 Q
b1100000 !
b1100000 .
b1100000 N
b1100000 \
1$
#53
0$
#54
b1101000 /
b1101000 H
b1101000 M
b1101000 P
b1101000 ]
b1100100 !
b1100100 .
b1100100 N
b1100100 \
b1100100 *
b1100100 Q
1$
#55
0$
#56
b1101100 /
b1101100 H
b1101100 M
b1101100 P
b1101100 ]
b1101000 *
b1101000 Q
b1101000 !
b1101000 .
b1101000 N
b1101000 \
1$
#57
0$
#58
b1110000 /
b1110000 H
b1110000 M
b1110000 P
b1110000 ]
b1101100 !
b1101100 .
b1101100 N
b1101100 \
b1101100 *
b1101100 Q
1$
#59
0$
#60
b1110100 /
b1110100 H
b1110100 M
b1110100 P
b1110100 ]
b1110000 *
b1110000 Q
b1110000 !
b1110000 .
b1110000 N
b1110000 \
1$
#61
0$
#62
b1111000 /
b1111000 H
b1111000 M
b1111000 P
b1111000 ]
b1110100 !
b1110100 .
b1110100 N
b1110100 \
b1110100 *
b1110100 Q
1$
#63
0$
